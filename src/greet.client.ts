// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "greet.proto" (package "proto.greet", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { GreetService } from "./greet";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GreetResponse } from "./greet";
import type { GreetRequest } from "./greet";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service proto.greet.GreetService
 */
export interface IGreetServiceClient {
    /**
     * @generated from protobuf rpc: Greet(proto.greet.GreetRequest) returns (proto.greet.GreetResponse);
     */
    greet(input: GreetRequest, options?: RpcOptions): UnaryCall<GreetRequest, GreetResponse>;
}
/**
 * @generated from protobuf service proto.greet.GreetService
 */
export class GreetServiceClient implements IGreetServiceClient, ServiceInfo {
    typeName = GreetService.typeName;
    methods = GreetService.methods;
    options = GreetService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Greet(proto.greet.GreetRequest) returns (proto.greet.GreetResponse);
     */
    greet(input: GreetRequest, options?: RpcOptions): UnaryCall<GreetRequest, GreetResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GreetRequest, GreetResponse>("unary", this._transport, method, opt, input);
    }
}
